{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context.js","components/layout/Spinner.js","components/tracks/Track.js","components/tracks/Tracks.js","components/tracks/Search.js","components/layout/Index.js","components/tracks/Lyrics.js","components/layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","Context","React","createContext","reducer","state","action","type","track_list","payload","heading","Provider","dispatch","setState","axios","get","process","then","result","data","message","body","catch","error","console","log","value","this","props","children","Component","Consumer","src","spinner","alt","style","width","margin","display","Track","track","artist_name","track_name","album_name","to","track_id","Tracks","undefined","length","Spinner","Fragment","map","item","key","Search","trackTitle","findTrack","e","preventDefault","onChange","target","name","onSubmit","bind","placeholder","Index","Lyrics","lyrics","match","params","id","Object","keys","lyrics_body","album_id","primary_genres","music_genre_list","music_genre","music_genre_name","explicit","format","updated_time","Footer","href","App","Container","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gIAAAA,EAAOC,QAAU,IAA0B,qC,qJCU5BC,G,MARA,WACX,OACI,yBAAKC,UAAU,8CACX,0BAAMA,UAAU,gCAAhB,kB,oSCDZ,IAAMC,EAAUC,IAAMC,gBAChBC,EAAU,SAACC,EAAOC,GACpB,OAAOA,EAAOC,MACV,IAAK,gBACD,O,yVAAO,CAAP,GACOF,EADP,CAEIG,WAAYF,EAAOG,QACnBC,QAAS,mBAEjB,QACI,OAAOL,IAINM,EAAb,2MACIN,MAAQ,CACJG,WAAY,GACZE,QAAQ,yBACRE,SAAU,SAAAN,GAAM,OAAI,EAAKO,UAAS,SAAAR,GAAK,OAAID,EAAQC,EAAOC,QAJlE,mFAOwB,IAAD,OACfQ,IAAMC,IAAN,qKAAwKC,qCAClKC,MAAM,SAAAC,GAEA,EAAKL,SAAS,CACVL,WAAYU,EAAOC,KAAKC,QAAQC,KAAKb,gBAG/Cc,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAfzC,+BAmBQ,OACI,kBAACtB,EAAQU,SAAT,CAAkBe,MAAOC,KAAKtB,OACzBsB,KAAKC,MAAMC,cArB5B,GAA8BC,aA2BjBC,EAAW9B,EAAQ8B,S,iBC1CjB,aACX,OACI,6BACI,yBAAKC,IAAKC,IAASC,IAAI,aACvBC,MACI,CAAEC,MAAO,QAASC,OAAQ,YAAaC,QAAS,aCsBjDC,EA3BD,SAACX,GAAW,IACdY,EAAUZ,EAAVY,MAER,OACI,yBAAKxC,UAAU,YACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,aACX,4BAAKwC,EAAMC,aACX,uBAAGzC,UAAU,aACT,gCACI,uBAAGA,UAAU,gBADjB,UAEYwC,EAAME,YACT,6BACT,gCACI,uBAAG1C,UAAU,wBADjB,UAEYwC,EAAMG,YAElB,kBAAC,IAAD,CAAMC,GAAE,uBAAkBJ,EAAMK,UAAY7C,UAAU,0BAClD,uBAAGA,UAAU,yBADjB,qBCcT8C,E,iLA3BP,OACI,kBAACf,EAAD,MACM,SAAAL,GAAU,IACIlB,EAAwBkB,EAAxBlB,WAAYE,EAAYgB,EAAZhB,QAEpB,YAAkBqC,IAAfvC,GAAkD,IAAtBA,EAAWwC,OAC/B,kBAACC,EAAD,MAIH,kBAAC,IAAMC,SAAP,KACI,wBAAIlD,UAAU,oBAAoBU,GAClC,yBAAKV,UAAU,OACVQ,EAAW2C,KAAI,SAAAC,GAAI,OAChB,kBAAC,EAAD,CAAOC,IAAKD,EAAKZ,MAAMK,SAAUL,MAAOY,EAAKZ,oB,GAhBpEV,aCgENwB,E,2MAhEXjD,MAAQ,CACJkD,WAAY,I,EAGhBC,UAAY,SAAC5C,EAAU6C,GAEnBA,EAAEC,iBAEF5C,IAAMC,IAAN,qGAAwG,EAAKV,MAAMkD,WAAnH,2DAAgLvC,qCACvKC,MAAM,SAAAC,GACHM,QAAQC,IAAIP,EAAOC,MACnBP,EAAS,CACLL,KAAM,gBACNE,QAASS,EAAOC,KAAKC,QAAQC,KAAKb,aAGtC,EAAKK,SAAS,CACV0C,WAAY,QAGnBjC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,O,EAGxCoC,SAAW,SAAAF,GACPA,EAAEC,iBAEF,EAAK7C,SAAL,eACK4C,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOlC,S,wEAIxB,IAAD,OACL,OACI,kBAACK,EAAD,MACK,SAAAL,GAAU,IAECd,EAAac,EAAbd,SAER,OACI,yBAAKZ,UAAU,2BACX,wBAAIA,UAAU,yBACV,uBAAGA,UAAU,iBADjB,sBAGA,uBAAGA,UAAU,oBAAb,+BACA,0BAAM8D,SAAU,EAAKN,UAAUO,KAAK,EAAMnD,IACtC,yBAAKZ,UAAU,cACX,2BAAOO,KAAK,OACLP,UAAU,+BACVgE,YAAY,gBACZH,KAAK,aACLnC,MAAO,EAAKrB,MAAMkD,WAClBI,SAAU,EAAKA,SAASI,KAAK,KAEpC,4BAAQ/D,UAAU,wCAAwCO,KAAK,UAA/D,8B,GAtDfuB,aCSNmC,EATD,WACV,OACI,kBAAC,IAAMf,SAAP,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,iBCkEGgB,EApEf,2MACI7D,MAAQ,CACJmC,MAAO,GACP2B,OAAQ,IAHhB,mFAMwB,IAAD,OACfrD,IAAMC,IAAN,0GAA6GY,KAAKC,MAAMwC,MAAMC,OAAOC,GAArI,mBAAkJtD,qCAC5IC,MAAM,SAAAC,GAMA,OAJA,EAAKL,SAAS,CACVsD,OAAQjD,EAAOC,KAAKC,QAAQC,KAAK8C,SAG9BrD,IAAMC,IAAN,mGAAsG,EAAKa,MAAMwC,MAAMC,OAAOC,GAA9H,mBAA2ItD,wCAGvJC,MAAK,SAAAC,GAEJ,EAAKL,SAAS,CACV2B,MAAOtB,EAAOC,KAAKC,QAAQC,KAAKmB,WAGtClB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAvBzC,+BA0Bc,IAAD,EACqBI,KAAKtB,MAAvBmC,EADH,EACGA,MAAO2B,EADV,EACUA,OAEf,OADA3C,QAAQC,IAAIe,QACEO,IAAVP,QAAkCO,IAAXoB,GACU,IAA9BI,OAAOC,KAAKhC,GAAOQ,QAA+C,IAA/BuB,OAAOC,KAAKL,GAAQnB,OAC/C,kBAACC,EAAD,MAGP,kBAAC,IAAMC,SAAP,KACI,kBAAC,IAAD,CAAMN,GAAG,IAAI5C,UAAU,4BAAvB,WACA,yBAAKA,UAAU,QACX,wBAAIA,UAAU,eACTwC,EAAME,WADX,OAC0B,0BAAM1C,UAAU,kBACjCwC,EAAMC,cAGf,yBAAKzC,UAAU,aACX,uBAAGA,UAAU,aACRmE,EAAOM,eAIpB,wBAAIzE,UAAU,mBACV,wBAAIA,UAAU,mBACV,4CADJ,KACgCwC,EAAMkC,UAEtC,wBAAI1E,UAAU,mBACV,8CADJ,KACkCwC,EAAMmC,eAAeC,iBAAiB,GAAGC,YAAYC,kBAEvF,wBAAI9E,UAAU,mBACV,kDADJ,KACyD,IAAnBwC,EAAMuC,SAAiB,KAAO,OAEpE,wBAAI/E,UAAU,mBACV,gDADJ,KACmC,kBAAC,IAAD,CAAQgF,OAAO,iBAAiBxC,EAAMyC,qBA3DjG,GAA4BnD,aCQboD,EAZA,WACX,OACI,yBAAKlF,UAAU,oCACX,iEACI,uBAAGmF,KAAK,+BAAR,SADJ,qBAEe,uBAAGA,KAAK,sBAAR,WAEf,yCAAc,uBAAGA,KAAK,4EAAR,qB,QCoBXC,MAnBf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAMlC,SAAP,KACE,kBAAC,EAAD,MACA,kBAACmC,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,4BAA4BC,UAAWvB,IACzD,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,4CAA4CC,UAAWtB,MAG7E,kBAAC,EAAD,UCVUuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASxB,MACvB,2DCbNyB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlF,MAAK,SAAAmF,GACjCA,EAAaC,kB","file":"static/js/main.f63083bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.0cebd104.gif\";","import React from 'react'\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark mb-5 sticky-top\">\n            <span className=\"navbar-brand mb-0 h1 mx-auto\">LyricFinder</span>\n        </nav>\n    )\n}\n\nexport default Navbar;","import 'dotenv'\nimport React, { Component } from 'react'\nimport axios from 'axios';\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n    switch(action.type){\n        case 'SEARCH_TRACKS' :\n            return {\n                ...state,\n                track_list: action.payload,\n                heading: 'Search Results'\n            };\n        default:\n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = { \n        track_list: [],\n        heading: `Canada's Top 10 Tracks`,\n        dispatch: action => this.setState(state => reducer(state, action))\n    }\n\n    componentDidMount(){\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=ca&f_has_lyrics=1&apikey=${process.env.REACT_APP_MM_KEY}`)\n             .then( result => {\n                    // console.log(result.data)\n                    this.setState({\n                        track_list: result.data.message.body.track_list\n                    })\n              })\n             .catch(error => console.log(error));\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React from 'react'\nimport spinner from './spinner.gif'\n\nexport default () => {\n    return (\n        <div>\n            <img src={spinner} alt=\"Loading...\"\n            style={\n                { width: '200px', margin: '40px auto', display: 'block'}\n            }/>\n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Track = (props) => {\n    const { track } = props;\n\n    return (\n        <div className=\"col-md-6\">\n            <div className=\"card mb-4 shadow-sm\">\n                <div className=\"card-body\">\n                    <h5>{track.artist_name}</h5>\n                    <p className=\"card-text\">\n                        <strong>\n                            <i className=\"fas fa-play\"></i> \n                            Track: {track.track_name}\n                        </strong><br/>\n                        <strong>\n                            <i className=\"fas fa-compact-disc\"></i> \n                            Album: {track.album_name}\n                        </strong>\n                        <Link to={`lyrics/track/${track.track_id}`} className=\"btn btn-dark btn-block\">\n                            <i className=\"fas fa-chevron-right\"></i> View Lyrics\n                        </Link>\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Track;","import React, { Component } from 'react'\nimport { Consumer } from '../../context';\nimport Spinner from '../layout/Spinner';\nimport Track from '../tracks/Track';\n\nclass Tracks extends Component {\n    render() {\n        return (\n            <Consumer>\n                { value => {\n                        const { track_list, heading } = value;\n\n                        if(track_list === undefined || track_list.length === 0){\n                            return <Spinner/>\n                        }\n                        else{\n                            return (\n                                <React.Fragment>\n                                    <h3 className=\"text-center mb-4\">{heading}</h3>\n                                    <div className=\"row\">\n                                        {track_list.map(item => (\n                                            <Track key={item.track.track_id} track={item.track }/>\n                                        ))}\n                                    </div>\n                                </React.Fragment>\n                            )\n                        }\n                    }\n                }\n            </Consumer>\n        )\n    }\n}\n\nexport default Tracks;","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Consumer } from '../../context'\n\nclass Search extends Component {\n    state = {\n        trackTitle: ''\n    }\n\n    findTrack = (dispatch, e) => {\n\n        e.preventDefault();\n        \n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.search?q_track=${this.state.trackTitle}&page_size=10&page=1&s_track_rating=desc&apikey=${process.env.REACT_APP_MM_KEY}`)\n                .then( result => {\n                    console.log(result.data)\n                    dispatch({\n                        type: 'SEARCH_TRACKS',\n                        payload: result.data.message.body.track_list\n                    })\n\n                    this.setState({\n                        trackTitle: ''\n                    })\n                })\n                .catch(error => console.log(error));\n    }\n\n    onChange = e => {\n        e.preventDefault();\n\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n\n                    const { dispatch } = value;\n\n                    return (\n                        <div className=\"card card-body mb-4 p-4\">\n                            <h1 className=\"display-4 text-center\">\n                                <i className=\"fas fa-music\"></i> Search For A Song\n                            </h1>\n                            <p className=\"lead text-center\">Get the lyrics for any song</p>\n                            <form onSubmit={this.findTrack.bind(this, dispatch)}>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" \n                                           className=\"form-control form-control-lg\" \n                                           placeholder=\"Song title...\" \n                                           name=\"trackTitle\" \n                                           value={this.state.trackTitle} \n                                           onChange={this.onChange.bind(this)}\n                                    />\n                                    <button className=\"btn btn-primary btn-lg btn-block mb-5\" type=\"submit\">Get Track Lyrics</button>\n                                </div>\n                            </form>\n                        </div> \n                    );\n                }}\n            </Consumer>\n        )\n    }\n}\n\nexport default Search","import React from 'react'\nimport Tracks from '../tracks/Tracks';\nimport Search from '../tracks/Search';\n\nconst Index = () => {\n    return (\n        <React.Fragment>\n            <Search/>\n            <Tracks/>\n        </React.Fragment>\n    )\n}\n\nexport default Index;","import React, { Component } from 'react'\nimport axios from 'axios'\nimport Moment from 'react-moment'\nimport Spinner from '../layout/Spinner';\nimport { Link } from 'react-router-dom'\n\nexport class Lyrics extends Component {\n    state = {\n        track: {},\n        lyrics: {}\n    }\n\n    componentDidMount(){\n        axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MM_KEY}`)\n             .then( result => {\n                    // console.log(result.data)\n                    this.setState({\n                        lyrics: result.data.message.body.lyrics\n                    })\n\n                    return axios.get(`https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${this.props.match.params.id}&apikey=${process.env.REACT_APP_MM_KEY}`)\n                                \n              })\n              .then(result => {\n                // console.log(result.data)\n                this.setState({\n                    track: result.data.message.body.track\n                })\n              })\n             .catch(error => console.log(error));\n    }\n\n    render() {\n        const { track, lyrics } = this.state;\n        console.log(track)\n        if( track === undefined || lyrics === undefined\n            || Object.keys(track).length === 0 || Object.keys(lyrics).length === 0 ){\n                return <Spinner />\n        }else{\n            return(\n                <React.Fragment>\n                    <Link to=\"/\" className=\"btn btn-dark btn-sm mb-4\">Go Back</Link>\n                    <div className=\"card\">\n                        <h5 className=\"card-header\">\n                            {track.track_name} by <span className=\"text-secondary\">\n                                {track.artist_name}\n                            </span>\n                        </h5>\n                        <div className=\"card-body\">\n                            <p className=\"card-text\">\n                                {lyrics.lyrics_body}\n                            </p>\n                        </div>\n                    </div>\n                    <ul className=\"list-group mt-3\">\n                        <li className=\"list-group-item\">\n                            <strong>Album ID</strong>: {track.album_id}\n                        </li>\n                        <li className=\"list-group-item\">\n                            <strong>Song Genre</strong>: {track.primary_genres.music_genre_list[0].music_genre.music_genre_name}\n                        </li>\n                        <li className=\"list-group-item\">\n                            <strong>Explicit Words</strong>: {track.explicit === 0 ? 'No' : 'Yes' }\n                        </li>\n                        <li className=\"list-group-item\">\n                            <strong>Release Date</strong>: <Moment format=\"MMMM DD, YYYY\">{track.updated_time}</Moment>\n                        </li>\n                    </ul>\n                </React.Fragment>\n            );\n        }\n    }\n}\n\nexport default Lyrics\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"container-fluid footer-container\">\r\n            <p>&copy; 2019 All Rights Reserved. &nbsp;\t\r\n                <a href=\"https://github.com/itshally\">Hally</a>. &nbsp;\t\r\n                Powered by <a href=\"https://github.com\">Github</a>\r\n            </p>\r\n            <p>Credits to <a href=\"https://www.youtube.com/playlist?list=PLillGF-RfqbaxgxkKgKk1XlJAVCX31xRI\">Traversy Media</a></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Index from './components/layout/Index';\nimport Lyrics from './components/tracks/Lyrics';\nimport Footer from './components/layout/Footer';\nimport { Container } from 'react-bootstrap';\nimport { Provider } from './context';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <React.Fragment>\n          <Navbar/>\n          <Container>\n            <Switch>\n              <Route exact path=\"/react-search-lyrics-app/\" component={Index}/>\n              <Route exact path=\"/react-search-lyrics-app/lyrics/track/:id\" component={Lyrics}/>\n            </Switch>\n          </Container>\n          <Footer/>\n        </React.Fragment>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}